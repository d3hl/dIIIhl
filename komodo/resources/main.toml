[[server]]
name = "komodo-2"
[server.config]
address = "https://192.168.2.32:8120"
enabled = true

##

[[server]]
name = "komodo-3"
[server.config]
address = "https://192.168.2.33:8120"
enabled = true

##

[[server]]
name = "server-bkxal"
[server.config]
address = "https://periphery:8120"
enabled = true

##

[[stack]]
name = "actual-budget"
[stack.config]
server = "komodo-2"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
file_contents = """
services:
  actual_server:
    image: docker.io/actualbudget/actual-server:latest
    ports:
      - '5006:5006'
    volumes:
      # Change './actual-data' below to the path to the folder you want Actual to store its data in on your server.
      # '/data' is the path Actual will look for its files in by default, so leave that as-is.
      - ${ACTUAL_DATA_DIR}:/data
    healthcheck:
      # Enable health check for the instance
      test: ['CMD-SHELL', 'node src/scripts/health-check.js']
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
"""
environment = """
ACTUAL_DATA_DIR=/mnt/zApps/actualbudget
"""

##

[[stack]]
name = "authentik"
tags = ["external", "critical"]
[stack.config]
server = "server-bkxal"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
run_directory = "server11/authentik"
environment = """
AUTHENTIK_SECRET_KEY= [[AUTHENTIK_SECRET_KEY]]
PG_PASS= [[PG_PASS]]

"""

##

[[stack]]
name = "battle-of-the-bandwidth"
tags = [
  "internal",
  "testing",
  "monitoring"
]
[stack.config]
server = "komodo-2"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
run_directory = "/etc/komodo/stacks/battle-of-the-bandwidth/server12/battle-of-the-bandwidth"

##

[[stack]]
name = "corecontrol"
tags = ["internal", "testing"]
[stack.config]
server = "komodo-3"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
run_directory = "server13/corecontrol"
environment = """
JWT_SECRET=[[CORECONTROL_JWT_SECRET]]
POSTGRES_DATA=/mnt/zApps/corecontrol/data
"""

##

[[stack]]
name = "dumbterm"
tags = ["external", "production"]
[stack.config]
server = "komodo-2"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
run_directory = "/etc/komodo/stacks/dumbterm/server12/dumbterm"
environment = """
  DUMBTERM_CONFIG="/mnt/zApps/dumbterm/config"
  DUMBTERM_DATA_DIR="/mnt/zApps/dumbterm/data"
  DUMBTERM_TZ="Asia/Singapore"
  DUMBTERM_PIN=1111
  DUMBTERM_PORT=3002
  DUMBTERM_BASE_URL=http://dumbterm.d3adc3ii.cc:3002
"""

##

[[stack]]
name = "homepage"
tags = ["external", "production"]
[stack.config]
server = "server-bkxal"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
run_directory = "server11/homepage"
environment = """
DATA_DIR= /etc/komodo/repos/diiihl/server11/homepage
ALLOWED_HOSTS= homepage.d3adc3ii.cc,192.168.2.31:3000
"""

##

[[stack]]
name = "immich"
[stack.config]
server = "server-bkxal"
file_contents = """
services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    ports:
      - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - model-cache:/cache
    restart: always
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:42cba146593a5ea9a622002c1b7cba5da7be248650cbb64ecb9c6c33d29794b1
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    user: "1000:1000"
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: always

volumes:
  model-cache:
"""
environment = """
UPLOAD_LOCATION=/mnt/zApps/immich-external
DB_DATA_LOCATION=//mnt/zApps/immich-external/postgres
IMMICH_VERSION=release
DB_PASSWORD=[[IMMICH_DB_PASSWORD]]
DB_USERNAME=postgres
DB_DATABASE_NAME=immich
"""

##

[[stack]]
name = "karakeep"
tags = ["external", "production"]
[stack.config]
server = "server-bkxal"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
run_directory = "server11/karakeep-app"
environment = """
KARAKEEP_VERSION=release
NEXTAUTH_SECRET=[[KARA_NEXTAUTH_SECRET]]
MEILI_MASTER_KEY=[[KARA_MEILI_MASTER_KEY]]
NEXTAUTH_URL=http://192.168.2.31:3333
OPENAI_API_KEY=[[OPENAI_API_KEY]]
DATA_DIR=/mnt/zApps/karakeep/data
"""

##

[[stack]]
name = "nzbget"
[stack.config]
server = "komodo-2"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
run_directory = "server12/nzbget"
environment = """
NZBGET_USER= [[NZBGET_USER]]
NZBGET_PASS= [[NZBGET_PASS]]
NZBGET_CONFIG= /mnt/zApps/nzbget/config
NZBGET_DL= /mnt/zApps/nzbget/download
"""

##

[[stack]]
name = "portnote"
tags = [
  "internal",
  "testing",
  "monitoring"
]
[stack.config]
server = "komodo-3"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
run_directory = "server13/Portnote"
environment = """
JWT_SECRET=[[PORTNOTE_JWT_SECRET]]
USER_SECRET=[[PORTNOTE_USER_SECRET]]
LOGIN_USERNAME=d3
LOGIN_PASSWORD=[[PORTNOTE_LOGIN_PASSWORD]]
DATABASE_URL="postgresql://postgres:postgres@db:5432/postgres"
POSTGRES_DATA=/mnt/zApps/portnote/data
"""

##

[[stack]]
name = "prom-ga-alloy"
[stack.config]
server = "komodo-2"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
run_directory = "server12/prom-gra-alloy"
environment = """
LOKI_CONFIG_FILE=/etc/komodo/stacks/prom-gra-alloy/server12/prom-gra-alloy/config/loki-config.yaml
ALLOY_CONFIG_FILE=/etc/komodo/stacks/prom-gra-alloy/server12/prom-gra-alloy/config/config.alloy
"""

##

[[deployment]]
name = "alloy"
[deployment.config]
server = "komodo-2"
image.type = "Image"
image.params.image = "grafana/alloy:latest"
poll_for_updates = true
auto_update = true
network = "bridge"
restart = "unless-stopped"
command = "run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data etc/alloy/config.alloy"
ports = """
 12345:12345
"""
volumes = """
/etc/komodo/repos/diiihl-k2/server12/alloy/config/config.alloy:/etc/alloy/config.alloy
"""
environment = """

"""

##

[[deployment]]
name = "beszel-k11"
tags = ["internal", "monitoring"]
[deployment.config]
server = "server-bkxal"
image.type = "Image"
image.params.image = "henrygd/beszel-agent"
poll_for_updates = true
auto_update = true
restart = "unless-stopped"
volumes = """
/var/run/docker.sock:/var/run/docker.sock:ro
"""
environment = """
LISTEN=45876
KEY="ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJq8OcGRupFySjJHa5aIjeWFHd17+Lfwn+TVfwU6cTY/"
  # VARIABLE = value
"""

##

[[deployment]]
name = "beszel-k12"
tags = ["internal", "monitoring"]
[deployment.config]
server = "komodo-2"
image.type = "Image"
image.params.image = "henrygd/beszel-agent"
poll_for_updates = true
auto_update = true
restart = "unless-stopped"
volumes = """
/var/run/docker.sock:/var/run/docker.sock:ro
"""
environment = """
LISTEN=45876
KEY="ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJq8OcGRupFySjJHa5aIjeWFHd17+Lfwn+TVfwU6cTY/"
"""

##

[[deployment]]
name = "nessus"
tags = ["internal", "testing"]
[deployment.config]
server = "komodo-2"
image.type = "Image"
image.params.image = "tenable/nessus:latest-ubuntu"

##

[[deployment]]
name = "newt1"
tags = ["external", "production"]
[deployment.config]
server = "server-bkxal"
image.type = "Image"
image.params.image = "fosrl/newt"
poll_for_updates = true
auto_update = true
restart = "unless-stopped"
environment = """
  PANGOLIN_ENDPOINT=https://pangolin.d3adc3ii.cc
  NEWT_ID=[[NEWT_ID1]]
  NEWT_SECRET=[[NEWT_SECRET1]]
"""

##

[[deployment]]
name = "newt2"
tags = ["external", "production"]
[deployment.config]
server = "komodo-2"
image.type = "Image"
image.params.image = "fosrl/newt"
poll_for_updates = true
auto_update = true
restart = "unless-stopped"
environment = """
  PANGOLIN_ENDPOINT=https://pangolin.d3adc3ii.cc
  NEWT_ID=[[NEWT_ID2]]
  NEWT_SECRET=[[NEWT_SECRET2]]
"""

##

[[deployment]]
name = "omni-tools"
tags = ["external", "testing"]
[deployment.config]
server = "komodo-2"
image.type = "Image"
image.params.image = "iib0011/omni-tools:latest"
poll_for_updates = true
auto_update = true
network = "bridge"
restart = "unless-stopped"
ports = """
8281:80
"""

##

[[deployment]]
name = "statementsensei"
tags = ["internal", "testing"]
[deployment.config]
server = "komodo-2"
image.type = "Image"
image.params.image = "benjaminawd/statementsensei:latest"
poll_for_updates = true
auto_update = true
network = "bridge"
ports = """
8501:8501
"""
environment = """
  PDF_PASSWORD= [[PDF_PASSWORD]]
"""

##

[[deployment]]
name = "twingate"
tags = ["external", "production"]
[deployment.config]
server = "komodo-2"
image.type = "Image"
image.params.image = "twingate/connector:latest"
poll_for_updates = true
auto_update = true
restart = "unless-stopped"
environment = """
  TWINGATE_NETWORK=d3net
  TWINGATE_ACCESS_TOKEN=eyJhbGciOiJFUzI1NiIsImtpZCI6Inp3dkU1dHpJZzV4X2pSVEU4RTFWQll6MW0tX2g1dXlMZlhTV1VSS1BEVE0iLCJ0eXAiOiJEQVQifQ.eyJudCI6IkFOIiwiYWlkIjoiNTExMjE5IiwiZGlkIjoiMjE5MTEwMCIsImp0aSI6ImIxZjU3N2FkLTZmNDItNDYyYS05ZGIzLTY1NTE5ZmQyMTJlNCIsImlzcyI6InR3aW5nYXRlIiwiYXVkIjoiZDNuZXQiLCJleHAiOjE3NDYxNDQ5MDAsImlhdCI6MTc0NjE0MTMwMCwidmVyIjoiNCIsInRpZCI6IjEwMzU2NCIsInJudyI6MTc0NjE0MTU3OCwicm5ldGlkIjoiMTM1OTMxIn0.OxT4qXnqonLPGb1GwJTRcYoSwZG16x2JGA_Xu2pOo0dZH3jpqfd1SkjWy8JjcVePboTum2e0WEdNu4SFcJUy_A
  TWINGATE_REFRESH_TOKEN=mrNJNc7hirY3gO3-q9l6dnN_YjYl-8q79XRXg1ffZstYm8EYyH6xNXMIVviMaQ-2-GAa4wuSMv1J5ebEf9KvzIK94jmq7j9QGPH2Tr7ZnjlYADuKrEpKUkrmnbrROkgQy6nzWg
  TWINGATE_LOG_ANALYTICS=v2
"""

##

[[build]]
name = "karakeep"
[build.config]
builder = "local"
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"
build_path = "Dockerfile/karakeep"
dockerfile_path = "docker/Dockerfile"
image_registry.domain = "ghcr.io"
image_registry.account = "d3adc3iii"

##

[[repo]]
name = "diiihl"
[repo.config]
server = "server-bkxal"
builder = "local"
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"

##

[[repo]]
name = "diiihl-k2"
[repo.config]
server = "komodo-2"
builder = "local"
git_account = "d3adc3iii"
repo = "d3adc3iii/dIIIhl"

##

[[procedure]]
name = "check_update"

##

[[procedure]]
name = "pull-deploy"
description = "description = \"Pulls stack-repo, deploys stacks\""
config.schedule_timezone = "Asia/Singapore"

[[procedure.config.stage]]
name = "\"Pull Repo"
enabled = true
executions = [
  { execution.type = "PullRepo", execution.params.repo = "diiihl", enabled = true }
]

[[procedure.config.stage]]
name = "Deploy if changed"
enabled = true
executions = [
  { execution.type = "BatchDeployStackIfChanged", execution.params.pattern = "t*,o*", enabled = true }
]

##

[[alerter]]
name = "test-alert"
[alerter.config]


##

[[builder]]
name = "local"
[builder.config]
type = "Server"
params.server_id = "server-bkxal"

##

[[resource_sync]]
name = "sync"
[resource_sync.config]
repo = "d3adc3iii/dIIIhl"
git_account = "d3adc3iii"
resource_path = ["komodo/resources/main.toml"]
managed = true
delete = true
include_user_groups = true